library (lib1_ss0p72v125c_alpha_100) {
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 0.72);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.75;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 125;
  nom_voltage : 0.72;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 0.5;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (ss0p72v125c) {
    process : 1;
    temperature : 125;
    voltage : 0.72;
  }
  default_operating_conditions : ss0p72v125c;
  lu_table_template (delay_template_generic_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  power_lut_template (power_template_generic_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  cell (AN2AM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0415378;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000867215;
      rise_capacitance : 0.0008562;
      fall_capacitance : 0.000867215;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107477;
      rise_capacitance : 0.00107477;
      fall_capacitance : 0.00106554;
    }
  }
  cell (AN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0458774;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00152841;
      rise_capacitance : 0.00152123;
      fall_capacitance : 0.00152841;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00166077;
      rise_capacitance : 0.00166077;
      fall_capacitance : 0.0016142;
    }
  }
  cell (AN3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.043316;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00149011;
      rise_capacitance : 0.00147649;
      fall_capacitance : 0.00149011;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158406;
      rise_capacitance : 0.00156935;
      fall_capacitance : 0.00158406;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00161072;
      rise_capacitance : 0.00161072;
      fall_capacitance : 0.0015824;
    }
  }
  cell (AN4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C&D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0392311;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00141422;
      rise_capacitance : 0.00140778;
      fall_capacitance : 0.00141422;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00150946;
      rise_capacitance : 0.001491;
      fall_capacitance : 0.00150946;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157024;
      rise_capacitance : 0.0015468;
      fall_capacitance : 0.00157024;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157133;
      rise_capacitance : 0.00157133;
      fall_capacitance : 0.00155705;
    }
  }
  cell (AO211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0044301;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000420864;
      rise_capacitance : 0.000420864;
      fall_capacitance : 0.000417248;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000446805;
      rise_capacitance : 0.000446805;
      fall_capacitance : 0.000441908;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000437066;
      rise_capacitance : 0.000437066;
      fall_capacitance : 0.000426977;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000429869;
      rise_capacitance : 0.000429869;
      fall_capacitance : 0.000419726;
    }
  }
  cell (AO21M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00219433;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000372876;
      rise_capacitance : 0.000372876;
      fall_capacitance : 0.000369775;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000390704;
      rise_capacitance : 0.000390704;
      fall_capacitance : 0.000385082;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000438818;
      rise_capacitance : 0.000438818;
      fall_capacitance : 0.000416405;
    }
  }
  cell (AO221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00434883;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000394655;
      rise_capacitance : 0.000394655;
      fall_capacitance : 0.000391663;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408912;
      rise_capacitance : 0.000408912;
      fall_capacitance : 0.000403466;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000392521;
      rise_capacitance : 0.000392521;
      fall_capacitance : 0.000389076;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000410034;
      rise_capacitance : 0.000410034;
      fall_capacitance : 0.000406074;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000463515;
      rise_capacitance : 0.000463515;
      fall_capacitance : 0.000448483;
    }
  }
  cell (AO222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|(C1&C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00371986;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000396874;
      rise_capacitance : 0.000396874;
      fall_capacitance : 0.000388943;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000429371;
      rise_capacitance : 0.000429371;
      fall_capacitance : 0.000419746;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000381678;
      rise_capacitance : 0.000381678;
      fall_capacitance : 0.000376846;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000420437;
      rise_capacitance : 0.000420437;
      fall_capacitance : 0.000415676;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000386533;
      rise_capacitance : 0.000383322;
      fall_capacitance : 0.000386533;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000423976;
      rise_capacitance : 0.000423976;
      fall_capacitance : 0.000422601;
    }
  }
  cell (AO22M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00196389;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000437664;
      rise_capacitance : 0.000437664;
      fall_capacitance : 0.000433093;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000439684;
      rise_capacitance : 0.000439684;
      fall_capacitance : 0.000432255;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408148;
      rise_capacitance : 0.000402378;
      fall_capacitance : 0.000408148;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395709;
      rise_capacitance : 0.000393935;
      fall_capacitance : 0.000395709;
    }
  }
  cell (AO31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00363261;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000463176;
      rise_capacitance : 0.000459312;
      fall_capacitance : 0.000463176;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000428038;
      rise_capacitance : 0.000423996;
      fall_capacitance : 0.000428038;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000504483;
      rise_capacitance : 0.000501784;
      fall_capacitance : 0.000504483;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000510474;
      rise_capacitance : 0.000510474;
      fall_capacitance : 0.000483425;
    }
  }
  cell (AO32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00349414;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000460302;
      rise_capacitance : 0.00045613;
      fall_capacitance : 0.000460302;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000435864;
      rise_capacitance : 0.000432279;
      fall_capacitance : 0.000435864;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000487004;
      rise_capacitance : 0.000485126;
      fall_capacitance : 0.000487004;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000486191;
      rise_capacitance : 0.000486191;
      fall_capacitance : 0.000481604;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485072;
      rise_capacitance : 0.000485072;
      fall_capacitance : 0.000476431;
    }
  }
  cell (AO33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2&B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00197447;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000492496;
      rise_capacitance : 0.000491553;
      fall_capacitance : 0.000492496;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461062;
      rise_capacitance : 0.000460815;
      fall_capacitance : 0.000461062;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000433832;
      rise_capacitance : 0.000433832;
      fall_capacitance : 0.000431081;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474032;
      rise_capacitance : 0.000468328;
      fall_capacitance : 0.000474032;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0004416;
      rise_capacitance : 0.000437098;
      fall_capacitance : 0.0004416;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000468365;
      rise_capacitance : 0.000466216;
      fall_capacitance : 0.000468365;
    }
  }
  cell (AOI211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00111755;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474168;
      rise_capacitance : 0.000471131;
      fall_capacitance : 0.000474168;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473416;
      rise_capacitance : 0.00047183;
      fall_capacitance : 0.000473416;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000432497;
      rise_capacitance : 0.000432497;
      fall_capacitance : 0.000422887;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000431126;
      rise_capacitance : 0.000431126;
      fall_capacitance : 0.000411705;
    }
  }
  cell (AOI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0137238;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00352076;
      rise_capacitance : 0.00346897;
      fall_capacitance : 0.00352076;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00371923;
      rise_capacitance : 0.00369312;
      fall_capacitance : 0.00371923;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00326358;
      rise_capacitance : 0.00326358;
      fall_capacitance : 0.00308294;
    }
  }
  cell (AOI31M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00113589;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000384012;
      rise_capacitance : 0.000380954;
      fall_capacitance : 0.000384012;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000364483;
      rise_capacitance : 0.000361129;
      fall_capacitance : 0.000364483;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000361573;
      rise_capacitance : 0.000360831;
      fall_capacitance : 0.000361573;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461472;
      rise_capacitance : 0.000461472;
      fall_capacitance : 0.000428156;
    }
  }
  cell (AOI32M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0010118;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000365743;
      rise_capacitance : 0.000361875;
      fall_capacitance : 0.000365743;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000333746;
      rise_capacitance : 0.000329498;
      fall_capacitance : 0.000333746;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000335821;
      rise_capacitance : 0.000335375;
      fall_capacitance : 0.000335821;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000380986;
      rise_capacitance : 0.000380986;
      fall_capacitance : 0.000375436;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395297;
      rise_capacitance : 0.000395297;
      fall_capacitance : 0.000384627;
    }
  }
  cell (AOI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2&B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00100217;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000447328;
      rise_capacitance : 0.000447328;
      fall_capacitance : 0.000444912;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000445014;
      rise_capacitance : 0.000445014;
      fall_capacitance : 0.000443031;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000466483;
      rise_capacitance : 0.000466483;
      fall_capacitance : 0.000459632;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000451897;
      rise_capacitance : 0.000445602;
      fall_capacitance : 0.000451897;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000424042;
      rise_capacitance : 0.000417942;
      fall_capacitance : 0.000424042;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000433075;
      rise_capacitance : 0.000433075;
      fall_capacitance : 0.000432791;
    }
  }
  cell (BUFM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0347565;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010823;
      rise_capacitance : 0.0010823;
      fall_capacitance : 0.00104805;
    }
  }
  cell (CKAN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0316068;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00124981;
      rise_capacitance : 0.00121315;
      fall_capacitance : 0.00124981;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0012289;
      rise_capacitance : 0.0012289;
      fall_capacitance : 0.00121328;
    }
  }
  cell (CKBUFM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0297139;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134498;
      rise_capacitance : 0.00133426;
      fall_capacitance : 0.00134498;
    }
  }
  cell (CKINVM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0386354;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00370652;
      rise_capacitance : 0.00370652;
      fall_capacitance : 0.00366704;
    }
  }
  cell (CKMUX2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0148007;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00123018;
      rise_capacitance : 0.00121621;
      fall_capacitance : 0.00123018;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116277;
      rise_capacitance : 0.00114881;
      fall_capacitance : 0.00116277;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108634;
      rise_capacitance : 0.0010769;
      fall_capacitance : 0.00108634;
    }
  }
  cell (CKND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0193377;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00340055;
      rise_capacitance : 0.00332052;
      fall_capacitance : 0.00340055;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00353745;
      rise_capacitance : 0.00353745;
      fall_capacitance : 0.0034629;
    }
  }
  cell (CKXOR2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00294575;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00104901;
      rise_capacitance : 0.00104901;
      fall_capacitance : 0.00104623;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000603205;
      rise_capacitance : 0.000599368;
      fall_capacitance : 0.000603205;
    }
  }
  cell (DFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00513643;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00047862;
      rise_capacitance : 0.00047862;
      fall_capacitance : 0.000461942;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000396193;
      rise_capacitance : 0.000396193;
      fall_capacitance : 0.000383511;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00489334;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000466664;
      rise_capacitance : 0.000466664;
      fall_capacitance : 0.000449551;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000405317;
      rise_capacitance : 0.000405317;
      fall_capacitance : 0.000391435;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110716;
      rise_capacitance : 0.00108611;
      fall_capacitance : 0.00110716;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00461846;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000466355;
      rise_capacitance : 0.000466355;
      fall_capacitance : 0.000448275;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000320491;
      rise_capacitance : 0.000320491;
      fall_capacitance : 0.000314969;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00111722;
      rise_capacitance : 0.0011154;
      fall_capacitance : 0.00111722;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107757;
      rise_capacitance : 0.00104937;
      fall_capacitance : 0.00107757;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00529891;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00045409;
      rise_capacitance : 0.00045409;
      fall_capacitance : 0.00043624;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00042372;
      rise_capacitance : 0.00042372;
      fall_capacitance : 0.000415409;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00104248;
      rise_capacitance : 0.00101002;
      fall_capacitance : 0.00104248;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00498897;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000788633;
      rise_capacitance : 0.000788633;
      fall_capacitance : 0.00076968;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000562027;
      rise_capacitance : 0.000562027;
      fall_capacitance : 0.000549505;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118811;
      rise_capacitance : 0.00118811;
      fall_capacitance : 0.00116232;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00508864;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000761521;
      rise_capacitance : 0.000761521;
      fall_capacitance : 0.000739677;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000516611;
      rise_capacitance : 0.000516611;
      fall_capacitance : 0.000511548;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131212;
      rise_capacitance : 0.00131212;
      fall_capacitance : 0.00129332;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00109936;
      rise_capacitance : 0.00108863;
      fall_capacitance : 0.00109936;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00492144;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000562583;
      rise_capacitance : 0.000562583;
      fall_capacitance : 0.000546704;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000439958;
      rise_capacitance : 0.000439958;
      fall_capacitance : 0.00043991;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0012434;
      rise_capacitance : 0.0012434;
      fall_capacitance : 0.0012026;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000587294;
      rise_capacitance : 0.000587294;
      fall_capacitance : 0.000584801;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&((D&E)|(IQ&(!E))))";
    }
  }
  cell (DFMQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00490321;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000550394;
      rise_capacitance : 0.000550394;
      fall_capacitance : 0.000535841;
    }
    pin (D1) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00044823;
      rise_capacitance : 0.000448188;
      fall_capacitance : 0.00044823;
    }
    pin (D2) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000888596;
      rise_capacitance : 0.000888596;
      fall_capacitance : 0.000870819;
    }
    pin (S) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115988;
      rise_capacitance : 0.00115988;
      fall_capacitance : 0.00113245;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D1&S)|(D2&(!S)))";
    }
  }
  cell (DFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00517871;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474288;
      rise_capacitance : 0.000474288;
      fall_capacitance : 0.000463734;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000464308;
      rise_capacitance : 0.000464308;
      fall_capacitance : 0.000458346;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00500634;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000462462;
      rise_capacitance : 0.000462462;
      fall_capacitance : 0.000445553;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000465616;
      rise_capacitance : 0.000465616;
      fall_capacitance : 0.000463126;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00111076;
      rise_capacitance : 0.00108848;
      fall_capacitance : 0.00111076;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00483733;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461824;
      rise_capacitance : 0.000461824;
      fall_capacitance : 0.000445027;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000467672;
      rise_capacitance : 0.000467672;
      fall_capacitance : 0.000464068;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118329;
      rise_capacitance : 0.00118329;
      fall_capacitance : 0.00118322;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00121203;
      rise_capacitance : 0.00117859;
      fall_capacitance : 0.00121203;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00526723;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461153;
      rise_capacitance : 0.000461153;
      fall_capacitance : 0.000444559;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000429886;
      rise_capacitance : 0.000429886;
      fall_capacitance : 0.000423823;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00101499;
      rise_capacitance : 0.000984478;
      fall_capacitance : 0.00101499;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0051371;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000496984;
      rise_capacitance : 0.000496984;
      fall_capacitance : 0.000483751;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000444376;
      rise_capacitance : 0.000440132;
      fall_capacitance : 0.000444376;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000443148;
      rise_capacitance : 0.00044155;
      fall_capacitance : 0.000443148;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&D)";
    }
  }
  cell (DFQZRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00472237;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000600299;
      rise_capacitance : 0.000600299;
      fall_capacitance : 0.000586244;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000391871;
      rise_capacitance : 0.000391871;
      fall_capacitance : 0.00039135;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472384;
      rise_capacitance : 0.000469996;
      fall_capacitance : 0.000472384;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000476731;
      rise_capacitance : 0.000476731;
      fall_capacitance : 0.000465333;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&(!(SB&(!D))))";
    }
  }
  cell (DFQZSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0052775;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000501737;
      rise_capacitance : 0.000501737;
      fall_capacitance : 0.00048809;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00064451;
      rise_capacitance : 0.00064451;
      fall_capacitance : 0.000617506;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485518;
      rise_capacitance : 0.000485518;
      fall_capacitance : 0.000474484;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(!(SB&(!D)))";
    }
  }
  cell (INVM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0291492;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00307472;
      rise_capacitance : 0.00307472;
      fall_capacitance : 0.00296772;
    }
  }
  cell (LACM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00141156;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00492101;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00041364;
      rise_capacitance : 0.00041364;
      fall_capacitance : 0.000412131;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000479228;
      rise_capacitance : 0.000479228;
      fall_capacitance : 0.00046381;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LACQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0025734;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000410067;
      rise_capacitance : 0.000410067;
      fall_capacitance : 0.000408964;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000479151;
      rise_capacitance : 0.000479151;
      fall_capacitance : 0.000463563;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00244798;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00495593;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000440086;
      rise_capacitance : 0.000440086;
      fall_capacitance : 0.000438841;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478584;
      rise_capacitance : 0.000478584;
      fall_capacitance : 0.000463663;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334062;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000436649;
      rise_capacitance : 0.000436649;
      fall_capacitance : 0.000435563;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478908;
      rise_capacitance : 0.000478908;
      fall_capacitance : 0.000463792;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00526942;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000587007;
      rise_capacitance : 0.000584295;
      fall_capacitance : 0.000587007;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010784;
      rise_capacitance : 0.0010784;
      fall_capacitance : 0.0010519;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000824972;
      rise_capacitance : 0.000824198;
      fall_capacitance : 0.000824972;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00513753;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000360051;
      rise_capacitance : 0.000360051;
      fall_capacitance : 0.000358909;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000950677;
      rise_capacitance : 0.000950677;
      fall_capacitance : 0.000921789;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00043829;
      rise_capacitance : 0.000433387;
      fall_capacitance : 0.00043829;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00482775;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00488994;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000594061;
      rise_capacitance : 0.00059216;
      fall_capacitance : 0.000594061;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108329;
      rise_capacitance : 0.00108329;
      fall_capacitance : 0.00105216;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000831508;
      rise_capacitance : 0.000830446;
      fall_capacitance : 0.000831508;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00495975;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00393619;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000549082;
      rise_capacitance : 0.000546267;
      fall_capacitance : 0.000549082;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107799;
      rise_capacitance : 0.00107799;
      fall_capacitance : 0.00105219;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000839662;
      rise_capacitance : 0.00083047;
      fall_capacitance : 0.000839662;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000456846;
      rise_capacitance : 0.000448099;
      fall_capacitance : 0.000456846;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LASM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00480974;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0028917;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000365174;
      rise_capacitance : 0.000365174;
      fall_capacitance : 0.000363916;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000940282;
      rise_capacitance : 0.000940282;
      fall_capacitance : 0.000904375;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472576;
      rise_capacitance : 0.000457376;
      fall_capacitance : 0.000472576;
    }
    latch (IQ,IQN) {
    }
  }
  cell (MUX2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00225723;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000522;
      rise_capacitance : 0.000522;
      fall_capacitance : 0.000511442;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000575648;
      rise_capacitance : 0.000575648;
      fall_capacitance : 0.000567894;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000957071;
      rise_capacitance : 0.000957071;
      fall_capacitance : 0.00093745;
    }
  }
  cell (MUX3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&C)|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00333606;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000443538;
      rise_capacitance : 0.000443538;
      fall_capacitance : 0.000428166;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00076193;
      rise_capacitance : 0.000748884;
      fall_capacitance : 0.00076193;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000771517;
      rise_capacitance : 0.000771517;
      fall_capacitance : 0.000750767;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107963;
      rise_capacitance : 0.00107963;
      fall_capacitance : 0.00104589;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133468;
      rise_capacitance : 0.00133468;
      fall_capacitance : 0.00129469;
    }
  }
  cell (MUX4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0030175;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489463;
      rise_capacitance : 0.000489463;
      fall_capacitance : 0.000483708;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000661001;
      rise_capacitance : 0.000661001;
      fall_capacitance : 0.000652135;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000697737;
      rise_capacitance : 0.000697737;
      fall_capacitance : 0.000690124;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00080648;
      rise_capacitance : 0.00080648;
      fall_capacitance : 0.000798418;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00228969;
      rise_capacitance : 0.00228969;
      fall_capacitance : 0.00224346;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00126176;
      rise_capacitance : 0.00126176;
      fall_capacitance : 0.00122785;
    }
  }
  cell (MXB2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S&B)|((!S)&A)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00352268;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000453213;
      rise_capacitance : 0.000453213;
      fall_capacitance : 0.000445172;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000983952;
      rise_capacitance : 0.000983952;
      fall_capacitance : 0.000959718;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108963;
      rise_capacitance : 0.00108963;
      fall_capacitance : 0.00107233;
    }
  }
  cell (MXB3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&C)|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00512706;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556204;
      rise_capacitance : 0.000556204;
      fall_capacitance : 0.000551386;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000677503;
      rise_capacitance : 0.000677503;
      fall_capacitance : 0.000668195;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000697308;
      rise_capacitance : 0.000697308;
      fall_capacitance : 0.000688449;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0014747;
      rise_capacitance : 0.0014747;
      fall_capacitance : 0.00145816;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138698;
      rise_capacitance : 0.00138698;
      fall_capacitance : 0.00136125;
    }
  }
  cell (MXB4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00454323;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000481833;
      rise_capacitance : 0.000481833;
      fall_capacitance : 0.000479895;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000685866;
      rise_capacitance : 0.000685866;
      fall_capacitance : 0.000672148;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000791009;
      rise_capacitance : 0.000791009;
      fall_capacitance : 0.000779165;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000891701;
      rise_capacitance : 0.000891701;
      fall_capacitance : 0.000863408;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0021129;
      rise_capacitance : 0.0021129;
      fall_capacitance : 0.00205764;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117967;
      rise_capacitance : 0.00117967;
      fall_capacitance : 0.00115547;
    }
  }
  cell (ND2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0276147;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00404687;
      rise_capacitance : 0.00404687;
      fall_capacitance : 0.00401364;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146322;
      rise_capacitance : 0.00146322;
      fall_capacitance : 0.00141972;
    }
  }
  cell (ND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0276801;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00354738;
      rise_capacitance : 0.00349728;
      fall_capacitance : 0.00354738;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00378829;
      rise_capacitance : 0.00378829;
      fall_capacitance : 0.00366834;
    }
  }
  cell (ND3B1M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00133408;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000391253;
      rise_capacitance : 0.000388279;
      fall_capacitance : 0.000391253;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000417566;
      rise_capacitance : 0.000417566;
      fall_capacitance : 0.000417436;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475357;
      rise_capacitance : 0.000475357;
      fall_capacitance : 0.000465773;
    }
  }
  cell (ND3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.016813;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00292424;
      rise_capacitance : 0.00289678;
      fall_capacitance : 0.00292424;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00336578;
      rise_capacitance : 0.00336578;
      fall_capacitance : 0.00336359;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00344241;
      rise_capacitance : 0.00344241;
      fall_capacitance : 0.00341243;
    }
  }
  cell (ND4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00101881;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000389566;
      rise_capacitance : 0.000385927;
      fall_capacitance : 0.000389566;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395764;
      rise_capacitance : 0.00039158;
      fall_capacitance : 0.000395764;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000423896;
      rise_capacitance : 0.000423896;
      fall_capacitance : 0.000421914;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000453201;
      rise_capacitance : 0.000453201;
      fall_capacitance : 0.000441702;
    }
  }
  cell (ND4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&(!NB)&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00103842;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000425586;
      rise_capacitance : 0.000420607;
      fall_capacitance : 0.000425586;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000508642;
      rise_capacitance : 0.000508642;
      fall_capacitance : 0.000507198;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000450375;
      rise_capacitance : 0.000450375;
      fall_capacitance : 0.000440505;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430053;
      rise_capacitance : 0.000430053;
      fall_capacitance : 0.000422734;
    }
  }
  cell (ND4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00117002;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000340383;
      rise_capacitance : 0.000336939;
      fall_capacitance : 0.000340383;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000353596;
      rise_capacitance : 0.000350167;
      fall_capacitance : 0.000353596;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000362328;
      rise_capacitance : 0.000358706;
      fall_capacitance : 0.000362328;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000353847;
      rise_capacitance : 0.000353808;
      fall_capacitance : 0.000353847;
    }
  }
  cell (NR2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0147864;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00346311;
      rise_capacitance : 0.00346311;
      fall_capacitance : 0.00330407;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146908;
      rise_capacitance : 0.00146908;
      fall_capacitance : 0.00142939;
    }
  }
  cell (NR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0150375;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00323425;
      rise_capacitance : 0.00318623;
      fall_capacitance : 0.00323425;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00311058;
      rise_capacitance : 0.00311058;
      fall_capacitance : 0.00294666;
    }
  }
  cell (NR3B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00230056;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000435299;
      rise_capacitance : 0.000435299;
      fall_capacitance : 0.000426706;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000433622;
      rise_capacitance : 0.000433622;
      fall_capacitance : 0.000421486;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498033;
      rise_capacitance : 0.000498033;
      fall_capacitance : 0.00048331;
    }
  }
  cell (NR3M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00229444;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408594;
      rise_capacitance : 0.000408594;
      fall_capacitance : 0.000408005;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000451776;
      rise_capacitance : 0.000451776;
      fall_capacitance : 0.000441978;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000421281;
      rise_capacitance : 0.000421281;
      fall_capacitance : 0.000407956;
    }
  }
  cell (NR4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0010225;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000881839;
      rise_capacitance : 0.000881839;
      fall_capacitance : 0.000863092;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000845538;
      rise_capacitance : 0.000845538;
      fall_capacitance : 0.000828953;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000718938;
      rise_capacitance : 0.000718938;
      fall_capacitance : 0.000708948;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000513989;
      rise_capacitance : 0.000513989;
      fall_capacitance : 0.000503286;
    }
  }
  cell (NR4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|(!NB)|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00101514;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000834491;
      rise_capacitance : 0.000834491;
      fall_capacitance : 0.000817174;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000722801;
      rise_capacitance : 0.000722801;
      fall_capacitance : 0.000712516;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000509298;
      rise_capacitance : 0.000509298;
      fall_capacitance : 0.000495855;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000477997;
      rise_capacitance : 0.000477997;
      fall_capacitance : 0.000465167;
    }
  }
  cell (NR4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00203317;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000455701;
      rise_capacitance : 0.000455345;
      fall_capacitance : 0.000455701;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000460912;
      rise_capacitance : 0.000460912;
      fall_capacitance : 0.000451752;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000432867;
      rise_capacitance : 0.000432867;
      fall_capacitance : 0.00042421;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000407839;
      rise_capacitance : 0.000407839;
      fall_capacitance : 0.000401885;
    }
  }
  cell (OA211M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00190232;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000372207;
      rise_capacitance : 0.000370212;
      fall_capacitance : 0.000372207;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000361649;
      rise_capacitance : 0.000361649;
      fall_capacitance : 0.000360429;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000374946;
      rise_capacitance : 0.000373038;
      fall_capacitance : 0.000374946;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000387927;
      rise_capacitance : 0.000380112;
      fall_capacitance : 0.000387927;
    }
  }
  cell (OA21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.045209;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159985;
      rise_capacitance : 0.00159985;
      fall_capacitance : 0.00157243;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00165783;
      rise_capacitance : 0.00163176;
      fall_capacitance : 0.00165783;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00142374;
      rise_capacitance : 0.00142374;
      fall_capacitance : 0.00136379;
    }
  }
  cell (OA221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.003455;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000388575;
      rise_capacitance : 0.000388575;
      fall_capacitance : 0.000386627;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000403818;
      rise_capacitance : 0.000401149;
      fall_capacitance : 0.000403818;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000375002;
      rise_capacitance : 0.000375002;
      fall_capacitance : 0.000374316;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00058638;
      rise_capacitance : 0.000584242;
      fall_capacitance : 0.00058638;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000456189;
      rise_capacitance : 0.000442086;
      fall_capacitance : 0.000456189;
    }
  }
  cell (OA222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&(C1|C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00321672;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395859;
      rise_capacitance : 0.000395859;
      fall_capacitance : 0.000393972;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412094;
      rise_capacitance : 0.000408096;
      fall_capacitance : 0.000412094;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408636;
      rise_capacitance : 0.000406945;
      fall_capacitance : 0.000408636;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000378783;
      rise_capacitance : 0.000378783;
      fall_capacitance : 0.00037647;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000371505;
      rise_capacitance : 0.000371505;
      fall_capacitance : 0.000370283;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000369346;
      rise_capacitance : 0.000369346;
      fall_capacitance : 0.000361682;
    }
  }
  cell (OA22M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0412049;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00182716;
      rise_capacitance : 0.00179478;
      fall_capacitance : 0.00182716;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00172984;
      rise_capacitance : 0.00172984;
      fall_capacitance : 0.00168978;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00187448;
      rise_capacitance : 0.00187448;
      fall_capacitance : 0.00186715;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00177886;
      rise_capacitance : 0.00177886;
      fall_capacitance : 0.00170395;
    }
  }
  cell (OA31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00407857;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000421139;
      rise_capacitance : 0.000420554;
      fall_capacitance : 0.000421139;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000370649;
      rise_capacitance : 0.000370649;
      fall_capacitance : 0.000367028;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412617;
      rise_capacitance : 0.000412617;
      fall_capacitance : 0.000408792;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000497051;
      rise_capacitance : 0.000497051;
      fall_capacitance : 0.00048994;
    }
  }
  cell (OA32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0032577;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00045245;
      rise_capacitance : 0.000451818;
      fall_capacitance : 0.00045245;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472003;
      rise_capacitance : 0.000472003;
      fall_capacitance : 0.000465875;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000391517;
      rise_capacitance : 0.000391517;
      fall_capacitance : 0.000386211;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412177;
      rise_capacitance : 0.000412177;
      fall_capacitance : 0.000406287;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00042098;
      rise_capacitance : 0.00042098;
      fall_capacitance : 0.000407908;
    }
  }
  cell (OA33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2|B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00219517;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00043534;
      rise_capacitance : 0.00043534;
      fall_capacitance : 0.000435284;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000452937;
      rise_capacitance : 0.000452937;
      fall_capacitance : 0.000448158;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474603;
      rise_capacitance : 0.000474603;
      fall_capacitance : 0.000468211;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000506232;
      rise_capacitance : 0.000506232;
      fall_capacitance : 0.000501761;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000471824;
      rise_capacitance : 0.000471824;
      fall_capacitance : 0.000463196;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000468677;
      rise_capacitance : 0.000468677;
      fall_capacitance : 0.00045879;
    }
  }
  cell (OAI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013381;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00327203;
      rise_capacitance : 0.00326595;
      fall_capacitance : 0.00327203;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00322164;
      rise_capacitance : 0.00322164;
      fall_capacitance : 0.00311085;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00331366;
      rise_capacitance : 0.0032796;
      fall_capacitance : 0.00331366;
    }
  }
  cell (OAI31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00142549;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461037;
      rise_capacitance : 0.000461037;
      fall_capacitance : 0.000460684;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00048128;
      rise_capacitance : 0.00048128;
      fall_capacitance : 0.000471833;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000480857;
      rise_capacitance : 0.000480857;
      fall_capacitance : 0.000472987;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000454367;
      rise_capacitance : 0.000454271;
      fall_capacitance : 0.000454367;
    }
  }
  cell (OAI32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00100277;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526839;
      rise_capacitance : 0.000524076;
      fall_capacitance : 0.000526839;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000497265;
      rise_capacitance : 0.000497265;
      fall_capacitance : 0.000491613;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000463551;
      rise_capacitance : 0.000463551;
      fall_capacitance : 0.000455171;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000513067;
      rise_capacitance : 0.000513067;
      fall_capacitance : 0.000509118;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000491293;
      rise_capacitance : 0.000491293;
      fall_capacitance : 0.000472265;
    }
  }
  cell (OAI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2|B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00102489;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473559;
      rise_capacitance : 0.000472315;
      fall_capacitance : 0.000473559;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000454574;
      rise_capacitance : 0.000454574;
      fall_capacitance : 0.000449615;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000425118;
      rise_capacitance : 0.000425118;
      fall_capacitance : 0.000418781;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000414863;
      rise_capacitance : 0.000414863;
      fall_capacitance : 0.00041417;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000447408;
      rise_capacitance : 0.000447408;
      fall_capacitance : 0.000436709;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000446727;
      rise_capacitance : 0.000446727;
      fall_capacitance : 0.000435807;
    }
  }
  cell (OR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0447623;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167874;
      rise_capacitance : 0.00165558;
      fall_capacitance : 0.00167874;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0016181;
      rise_capacitance : 0.0016181;
      fall_capacitance : 0.00154638;
    }
  }
  cell (OR3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0433114;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146165;
      rise_capacitance : 0.00145044;
      fall_capacitance : 0.00146165;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00120144;
      rise_capacitance : 0.00120144;
      fall_capacitance : 0.00117154;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131154;
      rise_capacitance : 0.00131154;
      fall_capacitance : 0.00126707;
    }
  }
  cell (OR4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0246514;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157369;
      rise_capacitance : 0.00156596;
      fall_capacitance : 0.00157369;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0012477;
      rise_capacitance : 0.0012477;
      fall_capacitance : 0.00121804;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00122106;
      rise_capacitance : 0.00122106;
      fall_capacitance : 0.00119193;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134064;
      rise_capacitance : 0.00134064;
      fall_capacitance : 0.00131979;
    }
  }
  cell (OR6M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D|E|F)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00233224;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "E";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "F";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "E";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "F";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000428281;
      rise_capacitance : 0.000428281;
      fall_capacitance : 0.000411453;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00042349;
      rise_capacitance : 0.00042349;
      fall_capacitance : 0.000414996;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000375038;
      rise_capacitance : 0.000375038;
      fall_capacitance : 0.000372044;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000376114;
      rise_capacitance : 0.000376114;
      fall_capacitance : 0.00036354;
    }
    pin (E) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000372118;
      rise_capacitance : 0.000372118;
      fall_capacitance : 0.000363514;
    }
    pin (F) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000418299;
      rise_capacitance : 0.000418299;
      fall_capacitance : 0.000407701;
    }
  }
  cell (SDFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00481554;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000596066;
      rise_capacitance : 0.000596066;
      fall_capacitance : 0.000581761;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000812806;
      rise_capacitance : 0.000812806;
      fall_capacitance : 0.000797067;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000337094;
      rise_capacitance : 0.000337094;
      fall_capacitance : 0.000336064;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000950523;
      rise_capacitance : 0.000950523;
      fall_capacitance : 0.000927674;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00427667;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000600588;
      rise_capacitance : 0.000600588;
      fall_capacitance : 0.000586047;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000787006;
      rise_capacitance : 0.000787006;
      fall_capacitance : 0.000775564;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00102953;
      rise_capacitance : 0.00102376;
      fall_capacitance : 0.00102953;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000333675;
      rise_capacitance : 0.000333675;
      fall_capacitance : 0.000332644;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000918308;
      rise_capacitance : 0.000918308;
      fall_capacitance : 0.000895669;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00498206;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000603235;
      rise_capacitance : 0.000603235;
      fall_capacitance : 0.000588315;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0007981;
      rise_capacitance : 0.0007981;
      fall_capacitance : 0.000783633;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011712;
      rise_capacitance : 0.00115446;
      fall_capacitance : 0.0011712;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00033373;
      rise_capacitance : 0.00033373;
      fall_capacitance : 0.000332694;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000918637;
      rise_capacitance : 0.000918637;
      fall_capacitance : 0.000896077;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00395924;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000510073;
      rise_capacitance : 0.000510073;
      fall_capacitance : 0.000496845;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000347806;
      rise_capacitance : 0.000347806;
      fall_capacitance : 0.000341538;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00090561;
      rise_capacitance : 0.00090561;
      fall_capacitance : 0.000866268;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000503579;
      rise_capacitance : 0.000503579;
      fall_capacitance : 0.000490337;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100935;
      rise_capacitance : 0.00100935;
      fall_capacitance : 0.000988987;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00416886;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000585633;
      rise_capacitance : 0.000585633;
      fall_capacitance : 0.000569527;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000575578;
      rise_capacitance : 0.000575578;
      fall_capacitance : 0.000571955;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00122638;
      rise_capacitance : 0.00122638;
      fall_capacitance : 0.00120334;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107823;
      rise_capacitance : 0.00107694;
      fall_capacitance : 0.00107823;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000316056;
      rise_capacitance : 0.000316056;
      fall_capacitance : 0.000315655;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000950617;
      rise_capacitance : 0.000950617;
      fall_capacitance : 0.000924756;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00505554;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000564869;
      rise_capacitance : 0.000564869;
      fall_capacitance : 0.000549416;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000808094;
      rise_capacitance : 0.000808094;
      fall_capacitance : 0.000790345;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000330656;
      rise_capacitance : 0.000330656;
      fall_capacitance : 0.000329537;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000924465;
      rise_capacitance : 0.000924465;
      fall_capacitance : 0.000901772;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00492495;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000604269;
      rise_capacitance : 0.000604269;
      fall_capacitance : 0.000590075;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000782706;
      rise_capacitance : 0.000782706;
      fall_capacitance : 0.000764896;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00105218;
      rise_capacitance : 0.00104563;
      fall_capacitance : 0.00105218;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000329775;
      rise_capacitance : 0.000329775;
      fall_capacitance : 0.000328538;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000916466;
      rise_capacitance : 0.000916466;
      fall_capacitance : 0.000893145;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00492398;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000603196;
      rise_capacitance : 0.000603196;
      fall_capacitance : 0.000588344;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000764228;
      rise_capacitance : 0.000764228;
      fall_capacitance : 0.000745271;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113156;
      rise_capacitance : 0.00113036;
      fall_capacitance : 0.00113156;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140189;
      rise_capacitance : 0.00136701;
      fall_capacitance : 0.00140189;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000331621;
      rise_capacitance : 0.000331621;
      fall_capacitance : 0.000330436;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000907924;
      rise_capacitance : 0.000907924;
      fall_capacitance : 0.00088203;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clear_preset_var1 : L;
        clear_preset_var2 : H;
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00498548;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601564;
      rise_capacitance : 0.000601564;
      fall_capacitance : 0.000586226;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000763061;
      rise_capacitance : 0.000763061;
      fall_capacitance : 0.000743627;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116734;
      rise_capacitance : 0.00115159;
      fall_capacitance : 0.00116734;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000330985;
      rise_capacitance : 0.000330985;
      fall_capacitance : 0.000329719;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000913752;
      rise_capacitance : 0.000913752;
      fall_capacitance : 0.000890586;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (XNR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00415002;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00104407;
      rise_capacitance : 0.00104407;
      fall_capacitance : 0.00101902;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000589542;
      rise_capacitance : 0.000589542;
      fall_capacitance : 0.000569978;
    }
  }
  cell (XNR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0033915;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000618606;
      rise_capacitance : 0.000618606;
      fall_capacitance : 0.000602406;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107742;
      rise_capacitance : 0.00107742;
      fall_capacitance : 0.00104866;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108396;
      rise_capacitance : 0.00108396;
      fall_capacitance : 0.00104896;
    }
  }
  cell (XNR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C^D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00382583;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107505;
      rise_capacitance : 0.00107505;
      fall_capacitance : 0.00104949;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000632935;
      rise_capacitance : 0.000632935;
      fall_capacitance : 0.000617578;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613523;
      rise_capacitance : 0.000613523;
      fall_capacitance : 0.000597381;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112294;
      rise_capacitance : 0.00112294;
      fall_capacitance : 0.00109711;
    }
  }
  cell (XOR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00446308;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00111589;
      rise_capacitance : 0.00111589;
      fall_capacitance : 0.00108716;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000607668;
      rise_capacitance : 0.000607668;
      fall_capacitance : 0.000586927;
    }
  }
  cell (XOR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00405734;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000688008;
      rise_capacitance : 0.000688008;
      fall_capacitance : 0.000666104;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00111577;
      rise_capacitance : 0.00111577;
      fall_capacitance : 0.00108704;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000927585;
      rise_capacitance : 0.000927585;
      fall_capacitance : 0.000905221;
    }
  }
  cell (XOR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C^D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00364561;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107512;
      rise_capacitance : 0.00107512;
      fall_capacitance : 0.0010488;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000630278;
      rise_capacitance : 0.000630278;
      fall_capacitance : 0.00061377;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000574263;
      rise_capacitance : 0.000574263;
      fall_capacitance : 0.000553757;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011226;
      rise_capacitance : 0.0011226;
      fall_capacitance : 0.00109403;
    }
  }
}
