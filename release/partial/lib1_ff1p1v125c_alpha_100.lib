library (lib1_ff1p1v125c_alpha_100) {
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 1.1);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.75;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 125;
  nom_voltage : 1.1;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 0.5;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (ff1p1v125c) {
    process : 1;
    temperature : 125;
    voltage : 1.1;
  }
  default_operating_conditions : ff1p1v125c;
  lu_table_template (delay_template_generic_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  power_lut_template (power_template_generic_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  cell (AN2AM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112104;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00122525;
      rise_capacitance : 0.00120664;
      fall_capacitance : 0.00122525;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158454;
      rise_capacitance : 0.00158454;
      fall_capacitance : 0.00157606;
    }
  }
  cell (AN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.115718;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00218171;
      rise_capacitance : 0.00215284;
      fall_capacitance : 0.00218171;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00243751;
      rise_capacitance : 0.00243751;
      fall_capacitance : 0.00239725;
    }
  }
  cell (AN3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.114327;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00208493;
      rise_capacitance : 0.00205924;
      fall_capacitance : 0.00208493;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00220252;
      rise_capacitance : 0.00217974;
      fall_capacitance : 0.00220252;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00238706;
      rise_capacitance : 0.00238706;
      fall_capacitance : 0.00234522;
    }
  }
  cell (AN4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C&D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.111807;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00194387;
      rise_capacitance : 0.00193014;
      fall_capacitance : 0.00194387;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00206349;
      rise_capacitance : 0.00204465;
      fall_capacitance : 0.00206349;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00216752;
      rise_capacitance : 0.00214707;
      fall_capacitance : 0.00216752;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00231356;
      rise_capacitance : 0.00231356;
      fall_capacitance : 0.00227902;
    }
  }
  cell (AO211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012693;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000582159;
      rise_capacitance : 0.000582159;
      fall_capacitance : 0.00057874;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000626112;
      rise_capacitance : 0.000626112;
      fall_capacitance : 0.000620849;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00063891;
      rise_capacitance : 0.00063891;
      fall_capacitance : 0.000632046;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000645736;
      rise_capacitance : 0.000645736;
      fall_capacitance : 0.000643968;
    }
  }
  cell (AO21M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00595682;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000539692;
      rise_capacitance : 0.000539692;
      fall_capacitance : 0.000537986;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000544345;
      rise_capacitance : 0.000544345;
      fall_capacitance : 0.000539336;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000694472;
      rise_capacitance : 0.000694472;
      fall_capacitance : 0.000684047;
    }
  }
  cell (AO221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132756;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000563337;
      rise_capacitance : 0.000563337;
      fall_capacitance : 0.000561311;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000573888;
      rise_capacitance : 0.000573888;
      fall_capacitance : 0.000568619;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000571202;
      rise_capacitance : 0.000571202;
      fall_capacitance : 0.000568102;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000589442;
      rise_capacitance : 0.000589442;
      fall_capacitance : 0.00058393;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000706914;
      rise_capacitance : 0.000706914;
      fall_capacitance : 0.000703681;
    }
  }
  cell (AO222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|(C1&C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126448;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000579557;
      rise_capacitance : 0.000579557;
      fall_capacitance : 0.000574655;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000612739;
      rise_capacitance : 0.000612739;
      fall_capacitance : 0.000604091;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000559072;
      rise_capacitance : 0.000559072;
      fall_capacitance : 0.00055611;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000609452;
      rise_capacitance : 0.000609452;
      fall_capacitance : 0.000603875;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000576609;
      rise_capacitance : 0.000571117;
      fall_capacitance : 0.000576609;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000635334;
      rise_capacitance : 0.000635334;
      fall_capacitance : 0.000634941;
    }
  }
  cell (AO22M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00581923;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000645543;
      rise_capacitance : 0.000645543;
      fall_capacitance : 0.000642152;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000667813;
      rise_capacitance : 0.000667813;
      fall_capacitance : 0.000658624;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601607;
      rise_capacitance : 0.000594444;
      fall_capacitance : 0.000601607;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000576189;
      rise_capacitance : 0.000575071;
      fall_capacitance : 0.000576189;
    }
  }
  cell (AO31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128935;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000670886;
      rise_capacitance : 0.000666312;
      fall_capacitance : 0.000670886;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000623562;
      rise_capacitance : 0.000616251;
      fall_capacitance : 0.000623562;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000734541;
      rise_capacitance : 0.000734508;
      fall_capacitance : 0.000734541;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000757659;
      rise_capacitance : 0.000757659;
      fall_capacitance : 0.000739099;
    }
  }
  cell (AO32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128035;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000682535;
      rise_capacitance : 0.000677181;
      fall_capacitance : 0.000682535;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000638341;
      rise_capacitance : 0.000631648;
      fall_capacitance : 0.000638341;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000731972;
      rise_capacitance : 0.000731972;
      fall_capacitance : 0.000731138;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000711411;
      rise_capacitance : 0.000711411;
      fall_capacitance : 0.000709281;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000705889;
      rise_capacitance : 0.000705889;
      fall_capacitance : 0.000697983;
    }
  }
  cell (AO33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2&B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0124608;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00071348;
      rise_capacitance : 0.000711223;
      fall_capacitance : 0.00071348;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00068094;
      rise_capacitance : 0.00067746;
      fall_capacitance : 0.00068094;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000637681;
      rise_capacitance : 0.000637681;
      fall_capacitance : 0.000632766;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000701273;
      rise_capacitance : 0.000694394;
      fall_capacitance : 0.000701273;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000648757;
      rise_capacitance : 0.00064117;
      fall_capacitance : 0.000648757;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000684937;
      rise_capacitance : 0.000684937;
      fall_capacitance : 0.000683911;
    }
  }
  cell (AOI211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334603;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000704096;
      rise_capacitance : 0.000699029;
      fall_capacitance : 0.000704096;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000693709;
      rise_capacitance : 0.000690841;
      fall_capacitance : 0.000693709;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000642693;
      rise_capacitance : 0.000642693;
      fall_capacitance : 0.000637018;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000619041;
      rise_capacitance : 0.000619041;
      fall_capacitance : 0.000604969;
    }
  }
  cell (AOI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0511404;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00513623;
      rise_capacitance : 0.00506692;
      fall_capacitance : 0.00513623;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00542614;
      rise_capacitance : 0.00540092;
      fall_capacitance : 0.00542614;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00484035;
      rise_capacitance : 0.00484035;
      fall_capacitance : 0.00470468;
    }
  }
  cell (AOI31M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00213524;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000564048;
      rise_capacitance : 0.000559754;
      fall_capacitance : 0.000564048;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000541063;
      rise_capacitance : 0.000534128;
      fall_capacitance : 0.000541063;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000533693;
      rise_capacitance : 0.000533693;
      fall_capacitance : 0.000533592;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000704728;
      rise_capacitance : 0.000704728;
      fall_capacitance : 0.000683408;
    }
  }
  cell (AOI32M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00197383;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000515322;
      rise_capacitance : 0.000508892;
      fall_capacitance : 0.000515322;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485615;
      rise_capacitance : 0.000477727;
      fall_capacitance : 0.000485615;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00049539;
      rise_capacitance : 0.00049539;
      fall_capacitance : 0.000494798;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000571078;
      rise_capacitance : 0.000571078;
      fall_capacitance : 0.000568468;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000610335;
      rise_capacitance : 0.000610335;
      fall_capacitance : 0.000599683;
    }
  }
  cell (AOI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2&B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00369446;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000644093;
      rise_capacitance : 0.000642435;
      fall_capacitance : 0.000644093;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000652809;
      rise_capacitance : 0.000650742;
      fall_capacitance : 0.000652809;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000697472;
      rise_capacitance : 0.000697472;
      fall_capacitance : 0.000690107;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000638639;
      rise_capacitance : 0.000629468;
      fall_capacitance : 0.000638639;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000615716;
      rise_capacitance : 0.000607176;
      fall_capacitance : 0.000615716;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000638742;
      rise_capacitance : 0.000638742;
      fall_capacitance : 0.000636904;
    }
  }
  cell (BUFM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0869051;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159711;
      rise_capacitance : 0.00159711;
      fall_capacitance : 0.00157867;
    }
  }
  cell (CKAN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0736243;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0018128;
      rise_capacitance : 0.00176989;
      fall_capacitance : 0.0018128;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00187994;
      rise_capacitance : 0.00187994;
      fall_capacitance : 0.00185683;
    }
  }
  cell (CKBUFM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.074782;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00204957;
      rise_capacitance : 0.00204445;
      fall_capacitance : 0.00204957;
    }
  }
  cell (CKINVM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.10852;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0057228;
      rise_capacitance : 0.0057228;
      fall_capacitance : 0.00569588;
    }
  }
  cell (CKMUX2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0692275;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0018294;
      rise_capacitance : 0.00182478;
      fall_capacitance : 0.0018294;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00170027;
      rise_capacitance : 0.00169918;
      fall_capacitance : 0.00170027;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00156285;
      rise_capacitance : 0.00156285;
      fall_capacitance : 0.00155978;
    }
  }
  cell (CKND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0510451;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00487639;
      rise_capacitance : 0.00477455;
      fall_capacitance : 0.00487639;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00524224;
      rise_capacitance : 0.00524224;
      fall_capacitance : 0.00516288;
    }
  }
  cell (CKXOR2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00908793;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00151138;
      rise_capacitance : 0.00151138;
      fall_capacitance : 0.00150462;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000911898;
      rise_capacitance : 0.000911898;
      fall_capacitance : 0.000908841;
    }
  }
  cell (DFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130731;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000773636;
      rise_capacitance : 0.000773636;
      fall_capacitance : 0.000759093;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601256;
      rise_capacitance : 0.000601256;
      fall_capacitance : 0.000592617;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131403;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000756482;
      rise_capacitance : 0.000756482;
      fall_capacitance : 0.000741943;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000590788;
      rise_capacitance : 0.000590788;
      fall_capacitance : 0.000586697;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158232;
      rise_capacitance : 0.0015744;
      fall_capacitance : 0.00158232;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130858;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000767245;
      rise_capacitance : 0.000767245;
      fall_capacitance : 0.000752917;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473428;
      rise_capacitance : 0.000473428;
      fall_capacitance : 0.00046824;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00163249;
      rise_capacitance : 0.00163249;
      fall_capacitance : 0.0016288;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015121;
      rise_capacitance : 0.00148285;
      fall_capacitance : 0.0015121;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134048;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000738625;
      rise_capacitance : 0.000738625;
      fall_capacitance : 0.000724825;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000617172;
      rise_capacitance : 0.000617172;
      fall_capacitance : 0.000612757;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140763;
      rise_capacitance : 0.00133887;
      fall_capacitance : 0.00140763;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132849;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119247;
      rise_capacitance : 0.00119247;
      fall_capacitance : 0.00117253;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000821459;
      rise_capacitance : 0.000821459;
      fall_capacitance : 0.00081596;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00178516;
      rise_capacitance : 0.00178516;
      fall_capacitance : 0.00178071;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133869;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113233;
      rise_capacitance : 0.00113233;
      fall_capacitance : 0.00111355;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000785854;
      rise_capacitance : 0.000785854;
      fall_capacitance : 0.000780162;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00197769;
      rise_capacitance : 0.00197769;
      fall_capacitance : 0.00196367;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159337;
      rise_capacitance : 0.0015835;
      fall_capacitance : 0.00159337;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128184;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000917356;
      rise_capacitance : 0.000917356;
      fall_capacitance : 0.000902457;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00063072;
      rise_capacitance : 0.000622541;
      fall_capacitance : 0.00063072;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0018509;
      rise_capacitance : 0.0018509;
      fall_capacitance : 0.00183279;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000876845;
      rise_capacitance : 0.000876845;
      fall_capacitance : 0.000871137;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&((D&E)|(IQ&(!E))))";
    }
  }
  cell (DFMQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126811;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00087033;
      rise_capacitance : 0.00087033;
      fall_capacitance : 0.000856462;
    }
    pin (D1) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00065539;
      rise_capacitance : 0.000654171;
      fall_capacitance : 0.00065539;
    }
    pin (D2) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00126179;
      rise_capacitance : 0.00126179;
      fall_capacitance : 0.00125414;
    }
    pin (S) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0017258;
      rise_capacitance : 0.0017258;
      fall_capacitance : 0.00170577;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D1&S)|(D2&(!S)))";
    }
  }
  cell (DFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131638;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000770074;
      rise_capacitance : 0.000770074;
      fall_capacitance : 0.000758788;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00067905;
      rise_capacitance : 0.00067752;
      fall_capacitance : 0.00067905;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132845;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000751516;
      rise_capacitance : 0.000751516;
      fall_capacitance : 0.000736733;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000683067;
      rise_capacitance : 0.000677854;
      fall_capacitance : 0.000683067;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158251;
      rise_capacitance : 0.00157294;
      fall_capacitance : 0.00158251;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131609;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000750587;
      rise_capacitance : 0.000750587;
      fall_capacitance : 0.000735933;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000680115;
      rise_capacitance : 0.000678188;
      fall_capacitance : 0.000680115;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00171025;
      rise_capacitance : 0.00171025;
      fall_capacitance : 0.00170553;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00172449;
      rise_capacitance : 0.00168611;
      fall_capacitance : 0.00172449;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133622;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00074507;
      rise_capacitance : 0.00074507;
      fall_capacitance : 0.000732035;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000631743;
      rise_capacitance : 0.000631743;
      fall_capacitance : 0.000628424;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00136667;
      rise_capacitance : 0.00129956;
      fall_capacitance : 0.00136667;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130293;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000826764;
      rise_capacitance : 0.000826764;
      fall_capacitance : 0.000812119;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000666626;
      rise_capacitance : 0.000661814;
      fall_capacitance : 0.000666626;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000660111;
      rise_capacitance : 0.00065943;
      fall_capacitance : 0.000660111;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&D)";
    }
  }
  cell (DFQZRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122797;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000982951;
      rise_capacitance : 0.000982258;
      fall_capacitance : 0.000982951;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565192;
      rise_capacitance : 0.000564526;
      fall_capacitance : 0.000565192;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000731894;
      rise_capacitance : 0.0007317;
      fall_capacitance : 0.000731894;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000746745;
      rise_capacitance : 0.000746745;
      fall_capacitance : 0.000734783;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&(!(SB&(!D))))";
    }
  }
  cell (DFQZSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133322;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000833739;
      rise_capacitance : 0.000833739;
      fall_capacitance : 0.000818014;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000901328;
      rise_capacitance : 0.000901328;
      fall_capacitance : 0.000884014;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00077498;
      rise_capacitance : 0.00077498;
      fall_capacitance : 0.000763268;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(!(SB&(!D)))";
    }
  }
  cell (INVM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0875417;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00459931;
      rise_capacitance : 0.00459931;
      fall_capacitance : 0.00455267;
    }
  }
  cell (LACM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130735;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129715;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000611022;
      rise_capacitance : 0.000611022;
      fall_capacitance : 0.000610215;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00076662;
      rise_capacitance : 0.00076662;
      fall_capacitance : 0.000752316;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LACQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013086;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000607295;
      rise_capacitance : 0.000607295;
      fall_capacitance : 0.00060644;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000766281;
      rise_capacitance : 0.000766281;
      fall_capacitance : 0.000752484;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131867;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126644;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000648085;
      rise_capacitance : 0.000648085;
      fall_capacitance : 0.000647215;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000764883;
      rise_capacitance : 0.000764883;
      fall_capacitance : 0.000751469;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131789;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000643326;
      rise_capacitance : 0.000643326;
      fall_capacitance : 0.000642536;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000764708;
      rise_capacitance : 0.000764708;
      fall_capacitance : 0.000751523;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013381;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000823562;
      rise_capacitance : 0.00081348;
      fall_capacitance : 0.000823562;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00155616;
      rise_capacitance : 0.00155616;
      fall_capacitance : 0.00154419;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115703;
      rise_capacitance : 0.00115703;
      fall_capacitance : 0.00115409;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132659;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000529824;
      rise_capacitance : 0.000529824;
      fall_capacitance : 0.000529099;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138769;
      rise_capacitance : 0.00138769;
      fall_capacitance : 0.00135957;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000645508;
      rise_capacitance : 0.00063398;
      fall_capacitance : 0.000645508;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126341;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0138657;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00084415;
      rise_capacitance : 0.000835622;
      fall_capacitance : 0.00084415;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015656;
      rise_capacitance : 0.0015656;
      fall_capacitance : 0.0015508;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116509;
      rise_capacitance : 0.00116509;
      fall_capacitance : 0.00116192;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128689;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0139718;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000772549;
      rise_capacitance : 0.000764952;
      fall_capacitance : 0.000772549;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015358;
      rise_capacitance : 0.0015358;
      fall_capacitance : 0.00151458;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118327;
      rise_capacitance : 0.00118327;
      fall_capacitance : 0.00118148;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000686944;
      rise_capacitance : 0.000677597;
      fall_capacitance : 0.000686944;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LASM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012673;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130444;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538635;
      rise_capacitance : 0.000538635;
      fall_capacitance : 0.000537794;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138023;
      rise_capacitance : 0.00138023;
      fall_capacitance : 0.00133996;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000711648;
      rise_capacitance : 0.000698098;
      fall_capacitance : 0.000711648;
    }
    latch (IQ,IQN) {
    }
  }
  cell (MUX2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00611575;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000815384;
      rise_capacitance : 0.000815384;
      fall_capacitance : 0.000806422;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000850287;
      rise_capacitance : 0.000850287;
      fall_capacitance : 0.000843339;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00137571;
      rise_capacitance : 0.00137571;
      fall_capacitance : 0.00135722;
    }
  }
  cell (MUX3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&C)|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119981;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000688394;
      rise_capacitance : 0.000688394;
      fall_capacitance : 0.00067598;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119652;
      rise_capacitance : 0.00119652;
      fall_capacitance : 0.00119553;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117206;
      rise_capacitance : 0.00117206;
      fall_capacitance : 0.00115275;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158139;
      rise_capacitance : 0.00158139;
      fall_capacitance : 0.00154803;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00192601;
      rise_capacitance : 0.00192601;
      fall_capacitance : 0.00188998;
    }
  }
  cell (MUX4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126906;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000744978;
      rise_capacitance : 0.000744978;
      fall_capacitance : 0.000739499;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100495;
      rise_capacitance : 0.00100495;
      fall_capacitance : 0.00099632;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010731;
      rise_capacitance : 0.0010731;
      fall_capacitance : 0.00106532;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113569;
      rise_capacitance : 0.00113569;
      fall_capacitance : 0.00112863;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00326968;
      rise_capacitance : 0.00326968;
      fall_capacitance : 0.00323029;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00180651;
      rise_capacitance : 0.00180651;
      fall_capacitance : 0.00177262;
    }
  }
  cell (MXB2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S&B)|((!S)&A)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00932364;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000682318;
      rise_capacitance : 0.000682318;
      fall_capacitance : 0.000677639;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013937;
      rise_capacitance : 0.0013937;
      fall_capacitance : 0.00137972;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00162749;
      rise_capacitance : 0.00162749;
      fall_capacitance : 0.00160416;
    }
  }
  cell (MXB3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&C)|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131202;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00083124;
      rise_capacitance : 0.00083124;
      fall_capacitance : 0.000826209;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100671;
      rise_capacitance : 0.00100671;
      fall_capacitance : 0.00100155;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00104301;
      rise_capacitance : 0.00104301;
      fall_capacitance : 0.00103855;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00204128;
      rise_capacitance : 0.00204128;
      fall_capacitance : 0.00201983;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00196609;
      rise_capacitance : 0.00196609;
      fall_capacitance : 0.00194214;
    }
  }
  cell (MXB4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129819;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000732783;
      rise_capacitance : 0.000732783;
      fall_capacitance : 0.000729215;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00104306;
      rise_capacitance : 0.00104306;
      fall_capacitance : 0.00103561;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117999;
      rise_capacitance : 0.00117999;
      fall_capacitance : 0.00116969;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135152;
      rise_capacitance : 0.00135152;
      fall_capacitance : 0.00133628;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00301507;
      rise_capacitance : 0.00301507;
      fall_capacitance : 0.00297792;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00169426;
      rise_capacitance : 0.00169426;
      fall_capacitance : 0.00167181;
    }
  }
  cell (ND2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0677332;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00587603;
      rise_capacitance : 0.00587603;
      fall_capacitance : 0.00583933;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00220808;
      rise_capacitance : 0.00220808;
      fall_capacitance : 0.00218263;
    }
  }
  cell (ND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0680967;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00509729;
      rise_capacitance : 0.00500373;
      fall_capacitance : 0.00509729;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00559242;
      rise_capacitance : 0.00559242;
      fall_capacitance : 0.0054884;
    }
  }
  cell (ND3B1M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00207262;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00056288;
      rise_capacitance : 0.000557006;
      fall_capacitance : 0.00056288;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000614534;
      rise_capacitance : 0.000614534;
      fall_capacitance : 0.000612215;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000725989;
      rise_capacitance : 0.000725989;
      fall_capacitance : 0.000717279;
    }
  }
  cell (ND3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0417644;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00399891;
      rise_capacitance : 0.00393929;
      fall_capacitance : 0.00399891;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00476075;
      rise_capacitance : 0.00474339;
      fall_capacitance : 0.00476075;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00488683;
      rise_capacitance : 0.00488683;
      fall_capacitance : 0.00484677;
    }
  }
  cell (ND4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00314764;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000558935;
      rise_capacitance : 0.000553586;
      fall_capacitance : 0.000558935;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000569293;
      rise_capacitance : 0.000563805;
      fall_capacitance : 0.000569293;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000624234;
      rise_capacitance : 0.000624234;
      fall_capacitance : 0.000620205;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000690731;
      rise_capacitance : 0.000690731;
      fall_capacitance : 0.000681534;
    }
  }
  cell (ND4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&(!NB)&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00301678;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000618192;
      rise_capacitance : 0.000612198;
      fall_capacitance : 0.000618192;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000736302;
      rise_capacitance : 0.000736302;
      fall_capacitance : 0.000732922;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000687165;
      rise_capacitance : 0.000687165;
      fall_capacitance : 0.000678124;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000657089;
      rise_capacitance : 0.000657089;
      fall_capacitance : 0.00065017;
    }
  }
  cell (ND4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0012336;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474718;
      rise_capacitance : 0.000470674;
      fall_capacitance : 0.000474718;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000505145;
      rise_capacitance : 0.00049851;
      fall_capacitance : 0.000505145;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526734;
      rise_capacitance : 0.000519761;
      fall_capacitance : 0.000526734;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000510944;
      rise_capacitance : 0.000510944;
      fall_capacitance : 0.000509439;
    }
  }
  cell (NR2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516436;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00485657;
      rise_capacitance : 0.00485657;
      fall_capacitance : 0.00475593;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00224485;
      rise_capacitance : 0.00224485;
      fall_capacitance : 0.00221833;
    }
  }
  cell (NR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516762;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00485119;
      rise_capacitance : 0.0047707;
      fall_capacitance : 0.00485119;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00439934;
      rise_capacitance : 0.00439934;
      fall_capacitance : 0.00429122;
    }
  }
  cell (NR3B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334725;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000624549;
      rise_capacitance : 0.000624549;
      fall_capacitance : 0.000618274;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000611208;
      rise_capacitance : 0.000611208;
      fall_capacitance : 0.000601741;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000769934;
      rise_capacitance : 0.000769934;
      fall_capacitance : 0.000757175;
    }
  }
  cell (NR3M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00238563;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000603437;
      rise_capacitance : 0.000600308;
      fall_capacitance : 0.000603437;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000642823;
      rise_capacitance : 0.000642823;
      fall_capacitance : 0.000636109;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000593231;
      rise_capacitance : 0.000593231;
      fall_capacitance : 0.000583859;
    }
  }
  cell (NR4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00538222;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00123789;
      rise_capacitance : 0.00123789;
      fall_capacitance : 0.00122635;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00114964;
      rise_capacitance : 0.00114964;
      fall_capacitance : 0.00113443;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000917601;
      rise_capacitance : 0.000917601;
      fall_capacitance : 0.000909478;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0008092;
      rise_capacitance : 0.0008092;
      fall_capacitance : 0.000797769;
    }
  }
  cell (NR4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|(!NB)|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00536347;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115161;
      rise_capacitance : 0.00115161;
      fall_capacitance : 0.00113562;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000921211;
      rise_capacitance : 0.000921211;
      fall_capacitance : 0.000913234;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000768647;
      rise_capacitance : 0.000768647;
      fall_capacitance : 0.000760469;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000722645;
      rise_capacitance : 0.000722645;
      fall_capacitance : 0.00071515;
    }
  }
  cell (NR4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00231307;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000657746;
      rise_capacitance : 0.000653449;
      fall_capacitance : 0.000657746;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000653929;
      rise_capacitance : 0.000653929;
      fall_capacitance : 0.000647917;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601473;
      rise_capacitance : 0.000601473;
      fall_capacitance : 0.000593122;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00055511;
      rise_capacitance : 0.00055511;
      fall_capacitance : 0.000549827;
    }
  }
  cell (OA211M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00608524;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000521813;
      rise_capacitance : 0.000516719;
      fall_capacitance : 0.000521813;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000509223;
      rise_capacitance : 0.000508529;
      fall_capacitance : 0.000509223;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000560541;
      rise_capacitance : 0.000559572;
      fall_capacitance : 0.000560541;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000582373;
      rise_capacitance : 0.000582373;
      fall_capacitance : 0.000580997;
    }
  }
  cell (OA21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.11577;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00219367;
      rise_capacitance : 0.00219367;
      fall_capacitance : 0.00219;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00234156;
      rise_capacitance : 0.00229321;
      fall_capacitance : 0.00234156;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00213574;
      rise_capacitance : 0.00213574;
      fall_capacitance : 0.00209688;
    }
  }
  cell (OA221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128606;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000559858;
      rise_capacitance : 0.000559858;
      fall_capacitance : 0.000558168;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000569427;
      rise_capacitance : 0.000565314;
      fall_capacitance : 0.000569427;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538067;
      rise_capacitance : 0.000536663;
      fall_capacitance : 0.000538067;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000793622;
      rise_capacitance : 0.00078782;
      fall_capacitance : 0.000793622;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000720486;
      rise_capacitance : 0.000720486;
      fall_capacitance : 0.000716024;
    }
  }
  cell (OA222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&(C1|C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122239;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000578203;
      rise_capacitance : 0.000578203;
      fall_capacitance : 0.000576047;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000587189;
      rise_capacitance : 0.000581562;
      fall_capacitance : 0.000587189;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00058984;
      rise_capacitance : 0.000586252;
      fall_capacitance : 0.00058984;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553097;
      rise_capacitance : 0.000553097;
      fall_capacitance : 0.0005515;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000554429;
      rise_capacitance : 0.000554429;
      fall_capacitance : 0.000552359;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000545913;
      rise_capacitance : 0.000545913;
      fall_capacitance : 0.000536826;
    }
  }
  cell (OA22M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.107101;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00269321;
      rise_capacitance : 0.00264269;
      fall_capacitance : 0.00269321;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0024396;
      rise_capacitance : 0.0024396;
      fall_capacitance : 0.00242098;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00275008;
      rise_capacitance : 0.00273655;
      fall_capacitance : 0.00275008;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00252919;
      rise_capacitance : 0.00252919;
      fall_capacitance : 0.00247444;
    }
  }
  cell (OA31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121849;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601856;
      rise_capacitance : 0.000597119;
      fall_capacitance : 0.000601856;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526139;
      rise_capacitance : 0.000526139;
      fall_capacitance : 0.00052609;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000585104;
      rise_capacitance : 0.000585104;
      fall_capacitance : 0.000584087;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000785508;
      rise_capacitance : 0.000785508;
      fall_capacitance : 0.000772771;
    }
  }
  cell (OA32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0127651;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000647233;
      rise_capacitance : 0.000643241;
      fall_capacitance : 0.000647233;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000654905;
      rise_capacitance : 0.000654905;
      fall_capacitance : 0.000651868;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556749;
      rise_capacitance : 0.000556749;
      fall_capacitance : 0.000552976;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000611987;
      rise_capacitance : 0.000611987;
      fall_capacitance : 0.000608858;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000615139;
      rise_capacitance : 0.000615139;
      fall_capacitance : 0.000604562;
    }
  }
  cell (OA33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2|B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131998;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000638085;
      rise_capacitance : 0.000634837;
      fall_capacitance : 0.000638085;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000654354;
      rise_capacitance : 0.000654354;
      fall_capacitance : 0.000651281;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000669459;
      rise_capacitance : 0.000669459;
      fall_capacitance : 0.000664334;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000753187;
      rise_capacitance : 0.000753187;
      fall_capacitance : 0.000751743;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000682516;
      rise_capacitance : 0.000682516;
      fall_capacitance : 0.000676027;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000685971;
      rise_capacitance : 0.000685971;
      fall_capacitance : 0.000676856;
    }
  }
  cell (OAI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0482988;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00484464;
      rise_capacitance : 0.00480694;
      fall_capacitance : 0.00484464;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0046406;
      rise_capacitance : 0.0046406;
      fall_capacitance : 0.00455474;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00490941;
      rise_capacitance : 0.00485391;
      fall_capacitance : 0.00490941;
    }
  }
  cell (OAI31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0035895;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000675077;
      rise_capacitance : 0.000672444;
      fall_capacitance : 0.000675077;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000688178;
      rise_capacitance : 0.000688178;
      fall_capacitance : 0.000681514;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000690473;
      rise_capacitance : 0.000690473;
      fall_capacitance : 0.000684252;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000715838;
      rise_capacitance : 0.00071322;
      fall_capacitance : 0.000715838;
    }
  }
  cell (OAI32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00246279;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000769973;
      rise_capacitance : 0.000763551;
      fall_capacitance : 0.000769973;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000708363;
      rise_capacitance : 0.000708363;
      fall_capacitance : 0.000705768;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000664798;
      rise_capacitance : 0.000664798;
      fall_capacitance : 0.000659288;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000771006;
      rise_capacitance : 0.000771006;
      fall_capacitance : 0.000770662;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000715085;
      rise_capacitance : 0.000715085;
      fall_capacitance : 0.00069942;
    }
  }
  cell (OAI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2|B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00294704;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000702979;
      rise_capacitance : 0.000696494;
      fall_capacitance : 0.000702979;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000656732;
      rise_capacitance : 0.000656732;
      fall_capacitance : 0.000653967;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000609877;
      rise_capacitance : 0.000609877;
      fall_capacitance : 0.000605364;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000615986;
      rise_capacitance : 0.000613161;
      fall_capacitance : 0.000615986;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000637965;
      rise_capacitance : 0.000637965;
      fall_capacitance : 0.00063002;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000624177;
      rise_capacitance : 0.000624177;
      fall_capacitance : 0.000614932;
    }
  }
  cell (OR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112352;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00255389;
      rise_capacitance : 0.00251834;
      fall_capacitance : 0.00255389;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00232959;
      rise_capacitance : 0.00232959;
      fall_capacitance : 0.00227444;
    }
  }
  cell (OR3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112302;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00218341;
      rise_capacitance : 0.00214688;
      fall_capacitance : 0.00218341;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00168262;
      rise_capacitance : 0.00168262;
      fall_capacitance : 0.0016621;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00175547;
      rise_capacitance : 0.00175547;
      fall_capacitance : 0.00172216;
    }
  }
  cell (OR4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.103297;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00225566;
      rise_capacitance : 0.00222532;
      fall_capacitance : 0.00225566;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00174763;
      rise_capacitance : 0.00174763;
      fall_capacitance : 0.00172985;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167545;
      rise_capacitance : 0.00167545;
      fall_capacitance : 0.00164688;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00179848;
      rise_capacitance : 0.00179848;
      fall_capacitance : 0.0017757;
    }
  }
  cell (OR6M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D|E|F)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00337482;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "E";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "F";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "E";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "F";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000620985;
      rise_capacitance : 0.000620985;
      fall_capacitance : 0.000608627;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000609746;
      rise_capacitance : 0.000609746;
      fall_capacitance : 0.000604187;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000549034;
      rise_capacitance : 0.000548488;
      fall_capacitance : 0.000549034;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000531849;
      rise_capacitance : 0.000531849;
      fall_capacitance : 0.00052309;
    }
    pin (E) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538528;
      rise_capacitance : 0.000538528;
      fall_capacitance : 0.000533;
    }
    pin (F) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000617354;
      rise_capacitance : 0.000617354;
      fall_capacitance : 0.000613586;
    }
  }
  cell (SDFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012542;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000957962;
      rise_capacitance : 0.000957962;
      fall_capacitance : 0.000940023;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112875;
      rise_capacitance : 0.00112875;
      fall_capacitance : 0.0011226;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000496173;
      rise_capacitance : 0.000496173;
      fall_capacitance : 0.000495042;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138653;
      rise_capacitance : 0.00138653;
      fall_capacitance : 0.00137465;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126221;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000971212;
      rise_capacitance : 0.000971212;
      fall_capacitance : 0.000954925;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110962;
      rise_capacitance : 0.00110962;
      fall_capacitance : 0.00110433;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00147875;
      rise_capacitance : 0.00147875;
      fall_capacitance : 0.00147839;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489669;
      rise_capacitance : 0.000489669;
      fall_capacitance : 0.000488338;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133768;
      rise_capacitance : 0.00133768;
      fall_capacitance : 0.00132598;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128508;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000972498;
      rise_capacitance : 0.000972498;
      fall_capacitance : 0.000953999;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00111454;
      rise_capacitance : 0.00111454;
      fall_capacitance : 0.00110836;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00161888;
      rise_capacitance : 0.00156992;
      fall_capacitance : 0.00161888;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489639;
      rise_capacitance : 0.000489639;
      fall_capacitance : 0.000488396;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013378;
      rise_capacitance : 0.0013378;
      fall_capacitance : 0.00132596;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132161;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000845176;
      rise_capacitance : 0.000845176;
      fall_capacitance : 0.000830247;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000521697;
      rise_capacitance : 0.000521697;
      fall_capacitance : 0.000514681;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133271;
      rise_capacitance : 0.00133271;
      fall_capacitance : 0.00130856;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000752135;
      rise_capacitance : 0.000752135;
      fall_capacitance : 0.000741477;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00155805;
      rise_capacitance : 0.00155805;
      fall_capacitance : 0.00154042;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126722;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00094857;
      rise_capacitance : 0.00094857;
      fall_capacitance : 0.000937696;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00081265;
      rise_capacitance : 0.00081265;
      fall_capacitance : 0.000809091;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00192951;
      rise_capacitance : 0.00192951;
      fall_capacitance : 0.00190487;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00155376;
      rise_capacitance : 0.00155376;
      fall_capacitance : 0.00154944;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000446784;
      rise_capacitance : 0.000446784;
      fall_capacitance : 0.000445992;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138085;
      rise_capacitance : 0.00138085;
      fall_capacitance : 0.00135651;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129537;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000908912;
      rise_capacitance : 0.000908912;
      fall_capacitance : 0.000895624;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112781;
      rise_capacitance : 0.00112781;
      fall_capacitance : 0.00112019;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000484245;
      rise_capacitance : 0.000484245;
      fall_capacitance : 0.000482875;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135588;
      rise_capacitance : 0.00135588;
      fall_capacitance : 0.00134416;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013141;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000963377;
      rise_capacitance : 0.000963377;
      fall_capacitance : 0.00094827;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00109093;
      rise_capacitance : 0.00109093;
      fall_capacitance : 0.00108366;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015125;
      rise_capacitance : 0.00151218;
      fall_capacitance : 0.0015125;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485139;
      rise_capacitance : 0.000485139;
      fall_capacitance : 0.000483574;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133645;
      rise_capacitance : 0.00133645;
      fall_capacitance : 0.00132381;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131992;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000963357;
      rise_capacitance : 0.000963357;
      fall_capacitance : 0.000946584;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00106556;
      rise_capacitance : 0.00106556;
      fall_capacitance : 0.00105764;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157414;
      rise_capacitance : 0.00156483;
      fall_capacitance : 0.00157414;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0020087;
      rise_capacitance : 0.00197828;
      fall_capacitance : 0.0020087;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000486988;
      rise_capacitance : 0.000486988;
      fall_capacitance : 0.000485169;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131156;
      rise_capacitance : 0.00131156;
      fall_capacitance : 0.00129448;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clear_preset_var1 : L;
        clear_preset_var2 : H;
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128179;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000965355;
      rise_capacitance : 0.000965355;
      fall_capacitance : 0.000948441;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00106088;
      rise_capacitance : 0.00106088;
      fall_capacitance : 0.00105299;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00162474;
      rise_capacitance : 0.00157521;
      fall_capacitance : 0.00162474;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000486798;
      rise_capacitance : 0.000486798;
      fall_capacitance : 0.000485362;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133268;
      rise_capacitance : 0.00133268;
      fall_capacitance : 0.00132065;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (XNR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0114799;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00148438;
      rise_capacitance : 0.00148438;
      fall_capacitance : 0.00146473;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000878549;
      rise_capacitance : 0.000878549;
      fall_capacitance : 0.000868243;
    }
  }
  cell (XNR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119205;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000920468;
      rise_capacitance : 0.000920468;
      fall_capacitance : 0.000909703;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00155785;
      rise_capacitance : 0.00155785;
      fall_capacitance : 0.00153352;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00155862;
      rise_capacitance : 0.00155862;
      fall_capacitance : 0.00153429;
    }
  }
  cell (XNR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C^D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134135;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015153;
      rise_capacitance : 0.0015153;
      fall_capacitance : 0.00149258;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000948538;
      rise_capacitance : 0.000948538;
      fall_capacitance : 0.000937843;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000906662;
      rise_capacitance : 0.000906662;
      fall_capacitance : 0.00089432;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159328;
      rise_capacitance : 0.00159328;
      fall_capacitance : 0.00157154;
    }
  }
  cell (XOR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121806;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157149;
      rise_capacitance : 0.00157149;
      fall_capacitance : 0.00154985;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00089679;
      rise_capacitance : 0.00089679;
      fall_capacitance : 0.00088667;
    }
  }
  cell (XOR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130745;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00105237;
      rise_capacitance : 0.00105237;
      fall_capacitance : 0.00103728;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00162927;
      rise_capacitance : 0.00162927;
      fall_capacitance : 0.00160668;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135461;
      rise_capacitance : 0.00135461;
      fall_capacitance : 0.00134028;
    }
  }
  cell (XOR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C^D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133628;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00151918;
      rise_capacitance : 0.00151918;
      fall_capacitance : 0.00149569;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000940377;
      rise_capacitance : 0.000940377;
      fall_capacitance : 0.000929339;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000851101;
      rise_capacitance : 0.000851101;
      fall_capacitance : 0.000835804;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159637;
      rise_capacitance : 0.00159637;
      fall_capacitance : 0.00157327;
    }
  }
}
